/*
 * BSD 2-Clause License
 *
 * Copyright (c) 2025, Erwan DUHAMEL
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice, this
 *    list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef FUBUKI_TEST_FUYU_SHADER_RESOURCES_HPP
#define FUBUKI_TEST_FUYU_SHADER_RESOURCES_HPP

#include <array>
#include <cstdint>

namespace fubuki::test::resources::shader
{

/// Various pre-compiled SPIR-V that can be used to construct, e.g., instances of fuyu::shader_module.
namespace spirv
{

/**
 * SPIRV 1.5 code targeting Vulkan 1.2 suitable for a fragment shader, equivalent to the GLSL code hereinafter.
 * Note that the bindings are selected according to what we test, i.e., these values must stay in sync with descriptor_set_resources::make().
 *
 * @code{.glsl}
#version 460

#extension GL_GOOGLE_include_directive : enable

int bar() { return 2; }
struct foo{int f;};

float zog(in vec2 f){return length(f);}
float hug(in vec4 f, in vec4 fff){return distance(f, fff);}

layout(location = 0) out vec4 fragment_colour;

void main()
{
fragment_colour = vec4(1.f);
}
@endcode
*/
inline constexpr std::array<std::uint32_t, 103> fragment{
    0x07230203, 0x00010500, 0x0008000b, 0x0000000c, 0x00000000, 0x00020011, 0x00000001, 0x0006000b, 0x00000001, 0x4c534c47, 0x6474732e, 0x3035342e,
    0x00000000, 0x0003000e, 0x00000000, 0x00000001, 0x0006000f, 0x00000004, 0x00000004, 0x6e69616d, 0x00000000, 0x00000009, 0x00030010, 0x00000004,
    0x00000007, 0x00030003, 0x00000002, 0x000001cc, 0x000a0004, 0x475f4c47, 0x4c474f4f, 0x70635f45, 0x74735f70, 0x5f656c79, 0x656e696c, 0x7269645f,
    0x69746365, 0x00006576, 0x00080004, 0x475f4c47, 0x4c474f4f, 0x6e695f45, 0x64756c63, 0x69645f65, 0x74636572, 0x00657669, 0x00040005, 0x00000004,
    0x6e69616d, 0x00000000, 0x00060005, 0x00000009, 0x67617266, 0x746e656d, 0x6c6f635f, 0x0072756f, 0x00040047, 0x00000009, 0x0000001e, 0x00000000,
    0x00020013, 0x00000002, 0x00030021, 0x00000003, 0x00000002, 0x00030016, 0x00000006, 0x00000020, 0x00040017, 0x00000007, 0x00000006, 0x00000004,
    0x00040020, 0x00000008, 0x00000003, 0x00000007, 0x0004003b, 0x00000008, 0x00000009, 0x00000003, 0x0004002b, 0x00000006, 0x0000000a, 0x3f800000,
    0x0007002c, 0x00000007, 0x0000000b, 0x0000000a, 0x0000000a, 0x0000000a, 0x0000000a, 0x00050036, 0x00000002, 0x00000004, 0x00000000, 0x00000003,
    0x000200f8, 0x00000005, 0x0003003e, 0x00000009, 0x0000000b, 0x000100fd, 0x00010038,
};

/**
 * SPIRV 1.5 code targeting Vulkan 1.2 suitable for a vertex shader, equivalent to the GLSL code hereinafter.
 * Note that the bindings are selected according to what we test, i.e., these values must stay in sync with descriptor_set_resources::make().
 * @code{.glsl}
#version 460

layout(location = 0) in vec3 in_position;
layout(location = 1) in mat4x4 in_instance_transform;

out gl_PerVertex { vec4 gl_Position; };
layout(location = 0) out vec3 vertex_position;

layout(std140, set = 0, binding = 0) uniform buf
{
mat4x4 view_point;
} uniform_buffer;

void main()
{
const vec4 model_position = in_instance_transform * vec4(in_position, 1);

vertex_position = vec3(model_position);

gl_Position = uniform_buffer.view_point * model_position;
}
@endcode
*
*/
inline constexpr std::array<std::uint32_t, 328> vertex{
    0x07230203, 0x00010500, 0x0008000b, 0x0000002e, 0x00000000, 0x00020011, 0x00000001, 0x0006000b, 0x00000001, 0x4c534c47, 0x6474732e, 0x3035342e,
    0x00000000, 0x0003000e, 0x00000000, 0x00000001, 0x000a000f, 0x00000000, 0x00000004, 0x6e69616d, 0x00000000, 0x0000000c, 0x00000010, 0x00000019,
    0x00000021, 0x00000026, 0x00030003, 0x00000002, 0x000001cc, 0x00040005, 0x00000004, 0x6e69616d, 0x00000000, 0x00060005, 0x00000009, 0x65646f6d,
    0x6f705f6c, 0x69746973, 0x00006e6f, 0x00080005, 0x0000000c, 0x695f6e69, 0x6174736e, 0x5f65636e, 0x6e617274, 0x726f6673, 0x0000006d, 0x00050005,
    0x00000010, 0x705f6e69, 0x7469736f, 0x006e6f69, 0x00060005, 0x00000019, 0x74726576, 0x705f7865, 0x7469736f, 0x006e6f69, 0x00060005, 0x0000001f,
    0x505f6c67, 0x65567265, 0x78657472, 0x00000000, 0x00060006, 0x0000001f, 0x00000000, 0x505f6c67, 0x7469736f, 0x006e6f69, 0x00030005, 0x00000021,
    0x00000000, 0x00030005, 0x00000024, 0x00667562, 0x00060006, 0x00000024, 0x00000000, 0x77656976, 0x696f705f, 0x0000746e, 0x00060005, 0x00000026,
    0x66696e75, 0x5f6d726f, 0x66667562, 0x00007265, 0x00040047, 0x0000000c, 0x0000001e, 0x00000001, 0x00040047, 0x00000010, 0x0000001e, 0x00000000,
    0x00040047, 0x00000019, 0x0000001e, 0x00000000, 0x00030047, 0x0000001f, 0x00000002, 0x00050048, 0x0000001f, 0x00000000, 0x0000000b, 0x00000000,
    0x00030047, 0x00000024, 0x00000002, 0x00040048, 0x00000024, 0x00000000, 0x00000005, 0x00050048, 0x00000024, 0x00000000, 0x00000007, 0x00000010,
    0x00050048, 0x00000024, 0x00000000, 0x00000023, 0x00000000, 0x00040047, 0x00000026, 0x00000021, 0x00000000, 0x00040047, 0x00000026, 0x00000022,
    0x00000000, 0x00020013, 0x00000002, 0x00030021, 0x00000003, 0x00000002, 0x00030016, 0x00000006, 0x00000020, 0x00040017, 0x00000007, 0x00000006,
    0x00000004, 0x00040020, 0x00000008, 0x00000007, 0x00000007, 0x00040018, 0x0000000a, 0x00000007, 0x00000004, 0x00040020, 0x0000000b, 0x00000001,
    0x0000000a, 0x0004003b, 0x0000000b, 0x0000000c, 0x00000001, 0x00040017, 0x0000000e, 0x00000006, 0x00000003, 0x00040020, 0x0000000f, 0x00000001,
    0x0000000e, 0x0004003b, 0x0000000f, 0x00000010, 0x00000001, 0x0004002b, 0x00000006, 0x00000012, 0x3f800000, 0x00040020, 0x00000018, 0x00000003,
    0x0000000e, 0x0004003b, 0x00000018, 0x00000019, 0x00000003, 0x0003001e, 0x0000001f, 0x00000007, 0x00040020, 0x00000020, 0x00000003, 0x0000001f,
    0x0004003b, 0x00000020, 0x00000021, 0x00000003, 0x00040015, 0x00000022, 0x00000020, 0x00000001, 0x0004002b, 0x00000022, 0x00000023, 0x00000000,
    0x0003001e, 0x00000024, 0x0000000a, 0x00040020, 0x00000025, 0x00000002, 0x00000024, 0x0004003b, 0x00000025, 0x00000026, 0x00000002, 0x00040020,
    0x00000027, 0x00000002, 0x0000000a, 0x00040020, 0x0000002c, 0x00000003, 0x00000007, 0x00050036, 0x00000002, 0x00000004, 0x00000000, 0x00000003,
    0x000200f8, 0x00000005, 0x0004003b, 0x00000008, 0x00000009, 0x00000007, 0x0004003d, 0x0000000a, 0x0000000d, 0x0000000c, 0x0004003d, 0x0000000e,
    0x00000011, 0x00000010, 0x00050051, 0x00000006, 0x00000013, 0x00000011, 0x00000000, 0x00050051, 0x00000006, 0x00000014, 0x00000011, 0x00000001,
    0x00050051, 0x00000006, 0x00000015, 0x00000011, 0x00000002, 0x00070050, 0x00000007, 0x00000016, 0x00000013, 0x00000014, 0x00000015, 0x00000012,
    0x00050091, 0x00000007, 0x00000017, 0x0000000d, 0x00000016, 0x0003003e, 0x00000009, 0x00000017, 0x0004003d, 0x00000007, 0x0000001a, 0x00000009,
    0x00050051, 0x00000006, 0x0000001b, 0x0000001a, 0x00000000, 0x00050051, 0x00000006, 0x0000001c, 0x0000001a, 0x00000001, 0x00050051, 0x00000006,
    0x0000001d, 0x0000001a, 0x00000002, 0x00060050, 0x0000000e, 0x0000001e, 0x0000001b, 0x0000001c, 0x0000001d, 0x0003003e, 0x00000019, 0x0000001e,
    0x00050041, 0x00000027, 0x00000028, 0x00000026, 0x00000023, 0x0004003d, 0x0000000a, 0x00000029, 0x00000028, 0x0004003d, 0x00000007, 0x0000002a,
    0x00000009, 0x00050091, 0x00000007, 0x0000002b, 0x00000029, 0x0000002a, 0x00050041, 0x0000002c, 0x0000002d, 0x00000021, 0x00000023, 0x0003003e,
    0x0000002d, 0x0000002b, 0x000100fd, 0x00010038,
};

/**
 * SPIRV 1.5 code targeting Vulkan 1.2 suitable for a compute shader, equivalent to the GLSL code hereinafter.
 * Note that the bindings are selected according to what we test, i.e., these values must stay in sync with descriptor_set_resources::make().
 * @code{.glsl}
#version 460

struct particle2d{vec2 xy; vec2 dir; vec4 colour;};

layout (local_size_x = 256, local_size_y = 1, local_size_z = 1) in;

layout(std140, binding = 0) uniform ubo_contents {float delta;} ubo;

layout(binding = 2) uniform sampler2D u_sampler;
layout(std140, binding = 3) readonly buffer in_ssbo{particle2d in_particles[];};

layout(binding = 1, rgba8) uniform writeonly image2D out_image;
layout(std140, binding = 4) writeonly buffer out_ssbo{particle2d out_particles[];};

void main()
{
    const uvec2 which = gl_GlobalInvocationID.xy;

    if(which.x < in_particles.length())
    {
        const particle2d particle = in_particles[which.x];
        out_particles[which.x].xy = particle.xy + particle.dir * ubo.delta;
        out_particles[which.x].dir = particle.dir;

        const uvec2 image_size = uvec2(imageSize(out_image));
        if(which.x < image_size.x && which.y < image_size.y)
        {
            const vec2 xy = vec2(which)/vec2(textureSize(u_sampler, 0));
            imageStore(out_image, ivec2(which), texture(u_sampler, xy) * particle.colour);
        }
    }
}
@endcode
 * It's freely inspired by https://vulkan-tutorial.com/Compute_Shader, which is licensed under CC0 1.0 Universal.
 * See https://github.com/Overv/VulkanTutorial?tab=readme-ov-file#license.
 */
inline constexpr std::array<std::uint32_t, 827> compute = {
    0x07230203, 0x00010500, 0x0008000b, 0x0000007a, 0x00000000, 0x00020011, 0x00000001, 0x00020011, 0x00000032, 0x0006000b, 0x00000001, 0x4c534c47,
    0x6474732e, 0x3035342e, 0x00000000, 0x0003000e, 0x00000000, 0x00000001, 0x000b000f, 0x00000005, 0x00000004, 0x6e69616d, 0x00000000, 0x0000000c,
    0x0000001a, 0x00000030, 0x0000003b, 0x0000004b, 0x00000066, 0x00060010, 0x00000004, 0x00000011, 0x00000100, 0x00000001, 0x00000001, 0x00030003,
    0x00000002, 0x000001cc, 0x00040005, 0x00000004, 0x6e69616d, 0x00000000, 0x00040005, 0x00000009, 0x63696877, 0x00000068, 0x00080005, 0x0000000c,
    0x475f6c67, 0x61626f6c, 0x766e496c, 0x7461636f, 0x496e6f69, 0x00000044, 0x00050005, 0x00000016, 0x74726170, 0x656c6369, 0x00006432, 0x00040006,
    0x00000016, 0x00000000, 0x00007978, 0x00040006, 0x00000016, 0x00000001, 0x00726964, 0x00050006, 0x00000016, 0x00000002, 0x6f6c6f63, 0x00007275,
    0x00040005, 0x00000018, 0x735f6e69, 0x006f6273, 0x00070006, 0x00000018, 0x00000000, 0x705f6e69, 0x69747261, 0x73656c63, 0x00000000, 0x00030005,
    0x0000001a, 0x00000000, 0x00050005, 0x00000023, 0x74726170, 0x656c6369, 0x00006432, 0x00040006, 0x00000023, 0x00000000, 0x00007978, 0x00040006,
    0x00000023, 0x00000001, 0x00726964, 0x00050006, 0x00000023, 0x00000002, 0x6f6c6f63, 0x00007275, 0x00050005, 0x00000025, 0x74726170, 0x656c6369,
    0x00000000, 0x00050005, 0x0000002e, 0x5f74756f, 0x6f627373, 0x00000000, 0x00070006, 0x0000002e, 0x00000000, 0x5f74756f, 0x74726170, 0x656c6369,
    0x00000073, 0x00030005, 0x00000030, 0x00000000, 0x00060005, 0x00000039, 0x5f6f6275, 0x746e6f63, 0x73746e65, 0x00000000, 0x00050006, 0x00000039,
    0x00000000, 0x746c6564, 0x00000061, 0x00030005, 0x0000003b, 0x006f6275, 0x00050005, 0x00000048, 0x67616d69, 0x69735f65, 0x0000657a, 0x00050005,
    0x0000004b, 0x5f74756f, 0x67616d69, 0x00000065, 0x00030005, 0x00000060, 0x00007978, 0x00050005, 0x00000066, 0x61735f75, 0x656c706d, 0x00000072,
    0x00040047, 0x0000000c, 0x0000000b, 0x0000001c, 0x00050048, 0x00000016, 0x00000000, 0x00000023, 0x00000000, 0x00050048, 0x00000016, 0x00000001,
    0x00000023, 0x00000008, 0x00050048, 0x00000016, 0x00000002, 0x00000023, 0x00000010, 0x00040047, 0x00000017, 0x00000006, 0x00000020, 0x00030047,
    0x00000018, 0x00000002, 0x00040048, 0x00000018, 0x00000000, 0x00000018, 0x00050048, 0x00000018, 0x00000000, 0x00000023, 0x00000000, 0x00030047,
    0x0000001a, 0x00000018, 0x00040047, 0x0000001a, 0x00000021, 0x00000003, 0x00040047, 0x0000001a, 0x00000022, 0x00000000, 0x00040047, 0x0000002d,
    0x00000006, 0x00000020, 0x00030047, 0x0000002e, 0x00000002, 0x00040048, 0x0000002e, 0x00000000, 0x00000019, 0x00050048, 0x0000002e, 0x00000000,
    0x00000023, 0x00000000, 0x00030047, 0x00000030, 0x00000019, 0x00040047, 0x00000030, 0x00000021, 0x00000004, 0x00040047, 0x00000030, 0x00000022,
    0x00000000, 0x00030047, 0x00000039, 0x00000002, 0x00050048, 0x00000039, 0x00000000, 0x00000023, 0x00000000, 0x00040047, 0x0000003b, 0x00000021,
    0x00000000, 0x00040047, 0x0000003b, 0x00000022, 0x00000000, 0x00030047, 0x0000004b, 0x00000019, 0x00040047, 0x0000004b, 0x00000021, 0x00000001,
    0x00040047, 0x0000004b, 0x00000022, 0x00000000, 0x00040047, 0x00000066, 0x00000021, 0x00000002, 0x00040047, 0x00000066, 0x00000022, 0x00000000,
    0x00040047, 0x00000079, 0x0000000b, 0x00000019, 0x00020013, 0x00000002, 0x00030021, 0x00000003, 0x00000002, 0x00040015, 0x00000006, 0x00000020,
    0x00000000, 0x00040017, 0x00000007, 0x00000006, 0x00000002, 0x00040020, 0x00000008, 0x00000007, 0x00000007, 0x00040017, 0x0000000a, 0x00000006,
    0x00000003, 0x00040020, 0x0000000b, 0x00000001, 0x0000000a, 0x0004003b, 0x0000000b, 0x0000000c, 0x00000001, 0x0004002b, 0x00000006, 0x0000000f,
    0x00000000, 0x00040020, 0x00000010, 0x00000007, 0x00000006, 0x00030016, 0x00000013, 0x00000020, 0x00040017, 0x00000014, 0x00000013, 0x00000002,
    0x00040017, 0x00000015, 0x00000013, 0x00000004, 0x0005001e, 0x00000016, 0x00000014, 0x00000014, 0x00000015, 0x0003001d, 0x00000017, 0x00000016,
    0x0003001e, 0x00000018, 0x00000017, 0x00040020, 0x00000019, 0x0000000c, 0x00000018, 0x0004003b, 0x00000019, 0x0000001a, 0x0000000c, 0x00040015,
    0x0000001c, 0x00000020, 0x00000001, 0x00020014, 0x0000001f, 0x0005001e, 0x00000023, 0x00000014, 0x00000014, 0x00000015, 0x00040020, 0x00000024,
    0x00000007, 0x00000023, 0x0004002b, 0x0000001c, 0x00000026, 0x00000000, 0x00040020, 0x00000029, 0x0000000c, 0x00000016, 0x0003001d, 0x0000002d,
    0x00000016, 0x0003001e, 0x0000002e, 0x0000002d, 0x00040020, 0x0000002f, 0x0000000c, 0x0000002e, 0x0004003b, 0x0000002f, 0x00000030, 0x0000000c,
    0x00040020, 0x00000033, 0x00000007, 0x00000014, 0x0004002b, 0x0000001c, 0x00000036, 0x00000001, 0x0003001e, 0x00000039, 0x00000013, 0x00040020,
    0x0000003a, 0x00000002, 0x00000039, 0x0004003b, 0x0000003a, 0x0000003b, 0x00000002, 0x00040020, 0x0000003c, 0x00000002, 0x00000013, 0x00040020,
    0x00000041, 0x0000000c, 0x00000014, 0x00090019, 0x00000049, 0x00000013, 0x00000001, 0x00000000, 0x00000000, 0x00000000, 0x00000002, 0x00000004,
    0x00040020, 0x0000004a, 0x00000000, 0x00000049, 0x0004003b, 0x0000004a, 0x0000004b, 0x00000000, 0x00040017, 0x0000004d, 0x0000001c, 0x00000002,
    0x0004002b, 0x00000006, 0x00000057, 0x00000001, 0x00090019, 0x00000063, 0x00000013, 0x00000001, 0x00000000, 0x00000000, 0x00000000, 0x00000001,
    0x00000000, 0x0003001b, 0x00000064, 0x00000063, 0x00040020, 0x00000065, 0x00000000, 0x00000064, 0x0004003b, 0x00000065, 0x00000066, 0x00000000,
    0x0004002b, 0x00000013, 0x00000071, 0x00000000, 0x0004002b, 0x0000001c, 0x00000073, 0x00000002, 0x00040020, 0x00000074, 0x00000007, 0x00000015,
    0x0004002b, 0x00000006, 0x00000078, 0x00000100, 0x0006002c, 0x0000000a, 0x00000079, 0x00000078, 0x00000057, 0x00000057, 0x00050036, 0x00000002,
    0x00000004, 0x00000000, 0x00000003, 0x000200f8, 0x00000005, 0x0004003b, 0x00000008, 0x00000009, 0x00000007, 0x0004003b, 0x00000024, 0x00000025,
    0x00000007, 0x0004003b, 0x00000008, 0x00000048, 0x00000007, 0x0004003b, 0x00000033, 0x00000060, 0x00000007, 0x0004003d, 0x0000000a, 0x0000000d,
    0x0000000c, 0x0007004f, 0x00000007, 0x0000000e, 0x0000000d, 0x0000000d, 0x00000000, 0x00000001, 0x0003003e, 0x00000009, 0x0000000e, 0x00050041,
    0x00000010, 0x00000011, 0x00000009, 0x0000000f, 0x0004003d, 0x00000006, 0x00000012, 0x00000011, 0x00050044, 0x00000006, 0x0000001b, 0x0000001a,
    0x00000000, 0x0004007c, 0x0000001c, 0x0000001d, 0x0000001b, 0x0004007c, 0x00000006, 0x0000001e, 0x0000001d, 0x000500b0, 0x0000001f, 0x00000020,
    0x00000012, 0x0000001e, 0x000300f7, 0x00000022, 0x00000000, 0x000400fa, 0x00000020, 0x00000021, 0x00000022, 0x000200f8, 0x00000021, 0x00050041,
    0x00000010, 0x00000027, 0x00000009, 0x0000000f, 0x0004003d, 0x00000006, 0x00000028, 0x00000027, 0x00060041, 0x00000029, 0x0000002a, 0x0000001a,
    0x00000026, 0x00000028, 0x0004003d, 0x00000016, 0x0000002b, 0x0000002a, 0x00040190, 0x00000023, 0x0000002c, 0x0000002b, 0x0003003e, 0x00000025,
    0x0000002c, 0x00050041, 0x00000010, 0x00000031, 0x00000009, 0x0000000f, 0x0004003d, 0x00000006, 0x00000032, 0x00000031, 0x00050041, 0x00000033,
    0x00000034, 0x00000025, 0x00000026, 0x0004003d, 0x00000014, 0x00000035, 0x00000034, 0x00050041, 0x00000033, 0x00000037, 0x00000025, 0x00000036,
    0x0004003d, 0x00000014, 0x00000038, 0x00000037, 0x00050041, 0x0000003c, 0x0000003d, 0x0000003b, 0x00000026, 0x0004003d, 0x00000013, 0x0000003e,
    0x0000003d, 0x0005008e, 0x00000014, 0x0000003f, 0x00000038, 0x0000003e, 0x00050081, 0x00000014, 0x00000040, 0x00000035, 0x0000003f, 0x00070041,
    0x00000041, 0x00000042, 0x00000030, 0x00000026, 0x00000032, 0x00000026, 0x0003003e, 0x00000042, 0x00000040, 0x00050041, 0x00000010, 0x00000043,
    0x00000009, 0x0000000f, 0x0004003d, 0x00000006, 0x00000044, 0x00000043, 0x00050041, 0x00000033, 0x00000045, 0x00000025, 0x00000036, 0x0004003d,
    0x00000014, 0x00000046, 0x00000045, 0x00070041, 0x00000041, 0x00000047, 0x00000030, 0x00000026, 0x00000044, 0x00000036, 0x0003003e, 0x00000047,
    0x00000046, 0x0004003d, 0x00000049, 0x0000004c, 0x0000004b, 0x00040068, 0x0000004d, 0x0000004e, 0x0000004c, 0x0004007c, 0x00000007, 0x0000004f,
    0x0000004e, 0x0003003e, 0x00000048, 0x0000004f, 0x00050041, 0x00000010, 0x00000050, 0x00000009, 0x0000000f, 0x0004003d, 0x00000006, 0x00000051,
    0x00000050, 0x00050041, 0x00000010, 0x00000052, 0x00000048, 0x0000000f, 0x0004003d, 0x00000006, 0x00000053, 0x00000052, 0x000500b0, 0x0000001f,
    0x00000054, 0x00000051, 0x00000053, 0x000300f7, 0x00000056, 0x00000000, 0x000400fa, 0x00000054, 0x00000055, 0x00000056, 0x000200f8, 0x00000055,
    0x00050041, 0x00000010, 0x00000058, 0x00000009, 0x00000057, 0x0004003d, 0x00000006, 0x00000059, 0x00000058, 0x00050041, 0x00000010, 0x0000005a,
    0x00000048, 0x00000057, 0x0004003d, 0x00000006, 0x0000005b, 0x0000005a, 0x000500b0, 0x0000001f, 0x0000005c, 0x00000059, 0x0000005b, 0x000200f9,
    0x00000056, 0x000200f8, 0x00000056, 0x000700f5, 0x0000001f, 0x0000005d, 0x00000054, 0x00000021, 0x0000005c, 0x00000055, 0x000300f7, 0x0000005f,
    0x00000000, 0x000400fa, 0x0000005d, 0x0000005e, 0x0000005f, 0x000200f8, 0x0000005e, 0x0004003d, 0x00000007, 0x00000061, 0x00000009, 0x00040070,
    0x00000014, 0x00000062, 0x00000061, 0x0004003d, 0x00000064, 0x00000067, 0x00000066, 0x00040064, 0x00000063, 0x00000068, 0x00000067, 0x00050067,
    0x0000004d, 0x00000069, 0x00000068, 0x00000026, 0x0004006f, 0x00000014, 0x0000006a, 0x00000069, 0x00050088, 0x00000014, 0x0000006b, 0x00000062,
    0x0000006a, 0x0003003e, 0x00000060, 0x0000006b, 0x0004003d, 0x00000049, 0x0000006c, 0x0000004b, 0x0004003d, 0x00000007, 0x0000006d, 0x00000009,
    0x0004007c, 0x0000004d, 0x0000006e, 0x0000006d, 0x0004003d, 0x00000064, 0x0000006f, 0x00000066, 0x0004003d, 0x00000014, 0x00000070, 0x00000060,
    0x00070058, 0x00000015, 0x00000072, 0x0000006f, 0x00000070, 0x00000002, 0x00000071, 0x00050041, 0x00000074, 0x00000075, 0x00000025, 0x00000073,
    0x0004003d, 0x00000015, 0x00000076, 0x00000075, 0x00050085, 0x00000015, 0x00000077, 0x00000072, 0x00000076, 0x00040063, 0x0000006c, 0x0000006e,
    0x00000077, 0x000200f9, 0x0000005f, 0x000200f8, 0x0000005f, 0x000200f9, 0x00000022, 0x000200f8, 0x00000022, 0x000100fd, 0x00010038,
};

} // namespace spirv

namespace ff
{
} // namespace ff

} // namespace fubuki::test::resources::shader

#endif // FUBUKI_TEST_FUYU_SHADER_RESOURCES_HPP
